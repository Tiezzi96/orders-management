<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>it.unifi.studenti.tiezzi.bernardo</groupId>
	<artifactId>orders-management</artifactId>
	<version>0.0.1-SNAPSHOT</version>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<log4j2.version>2.20.0</log4j2.version>
		<sonar.junit.reportPaths>
			${project.build.directory}/surefire-reports,
			${project.build.directory}/failsafe-reports
		</sonar.junit.reportPaths>

		<sonar.coverage.exclusions> **/model/*.*, **/app/swing/*.*

		</sonar.coverage.exclusions>

		<sonar.issue.ignore.multicriteria>e1,e2</sonar.issue.ignore.multicriteria>
		<!-- ignore sonar rule "Tests should include assertions" for UI tests
		with assertj swing-->
		<sonar.issue.ignore.multicriteria.e1.ruleKey>
			java:S2699
		</sonar.issue.ignore.multicriteria.e1.ruleKey>
		<sonar.issue.ignore.multicriteria.e1.resourceKey>
			**/swing/**/*.java
		</sonar.issue.ignore.multicriteria.e1.resourceKey>
		<sonar.issue.ignore.multicriteria.e2.ruleKey>
			java:S117
		</sonar.issue.ignore.multicriteria.e2.ruleKey>
		<sonar.issue.ignore.multicriteria.e2.resourceKey>
			**/OrderSwingView.java
		</sonar.issue.ignore.multicriteria.e2.resourceKey>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.mongodb</groupId>
			<artifactId>mongo-java-driver</artifactId>
			<version>3.12.14</version>
		</dependency>
		
		<dependency>
			<groupId>info.picocli</groupId>
			<artifactId>picocli</artifactId>
			<version>4.3.0</version>
		</dependency>

		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-api</artifactId>
			<version>${log4j2.version}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<version>${log4j2.version}</version>
		</dependency>


		<dependency>
			<!-- required to see Mongo Java Driver-->
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>1.2.3</version>
		</dependency>

		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-swing-junit</artifactId>
			<version>3.17.1</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>4.11.0</version>
			<scope>test</scope>
		</dependency>


		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>testcontainers</artifactId>
			<version>1.19.1</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>mongodb</artifactId>
			<version>1.19.1</version>
			<scope>test</scope>
		</dependency>

		<dependency><!-- dependency per javax.utils.pair-->
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.12.0</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<executions>
					<execution>
						<id>default-it</id>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
						<configuration>
							<skipTests>${skipItest}</skipTests>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>3.5.2</version>
				<configuration>
					<excludes>
						<exclude>**/*IT.java</exclude>
						<exclude>**/*E2ETest.java</exclude>
					</excludes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>3.0.0</version>
				<executions>
					<execution>
						<id>add-test-source</id>
						<phase>generate-test-sources</phase>
						<goals>
							<goal>add-test-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>src/it/java</source>
								<source>src/e2e/java</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>0.34.1</version>
				<configuration>
					<!-- Rimuove automaticamente i volumi al termine -->
					<removeVolumes>true</removeVolumes>
					<images>
						<image>
							<name>mongo:4.4.3</name>
							<run>
								<volumes>
									<bind>
										<volume>
											${project.basedir}/src/it/resources/docker:/script</volume>
									</bind>
								</volumes>
								<cmd>--replSet rs0</cmd>
								<ports>
									<port>27017:27017</port>
								</ports>
								<wait>
									<log>Waiting for connections</log>
									<!-- Timeout di attesa in ms prima di
									fallire -->
									<time>45000</time>
									<!-- Se fermiamo il container, aspettiamo 5s
									per arrestare il container -->
									<shutdown>5000</shutdown>
									<!-- Dopo 1s di attesa senza risposta,
									forziamo la chiusura -->
									<kill>1000</kill>
									<exec>
										<!-- Post‐start: eseguiamo lo script
										init_replicaSet.sh -->
										<postStart>sh /script/init_replicaSet.sh</postStart>
									</exec>
								</wait>
							</run>
						</image>
					</images>
				</configuration>
				<executions>
					<!-- In pre‐integration‐test, avvia il container Mongo -->
					<execution>
						<id>docker:start</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>start</goal>
						</goals>
					</execution>
					<!-- In post‐integration‐test, stoppa e rimuovi il container -->
					<execution>
						<id>docker:stop</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>stop</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>3.7.1</version>
				<configuration>
					<descriptorRefs>
						<descriptorRef>jar-with-dependencies</descriptorRef>
					</descriptorRefs>
					<archive>
						<manifest>
							<mainClass>
								com.unifi.ordersmgmt.app.swing.OrderSwingApp</mainClass>
						</manifest>
					</archive>
				</configuration>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.sonarsource.scanner.maven</groupId>
					<artifactId>sonar-maven-plugin</artifactId>
					<version>4.0.0.4121</version>
				</plugin>
				<plugin>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>0.8.12</version>
					<configuration>
						<excludes>
							<exclude>**/model/*.*</exclude>
							<exclude>**/app/swing/*.*</exclude>
						</excludes>
					</configuration>
					<executions>
						<execution>
							<id>prepare-agent</id>
							<goals>
								<goal>prepare-agent</goal>
							</goals>
						</execution>
						<execution>
							<id>report</id>
							<phase>verify</phase>
							<goals>
								<goal>report</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.eluder.coveralls</groupId>
					<artifactId>coveralls-maven-plugin</artifactId>
					<version>4.3.0</version>
					<dependencies>
						<dependency> <!-- Required when using JDK 9 or higher -->
							<groupId>javax.xml.bind</groupId>
							<artifactId>jaxb-api</artifactId>
							<version>2.3.1</version>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-failsafe-plugin</artifactId>
					<version>2.22.1</version>
					<executions>
						<execution>
							<id>integration-tests</id>
							<phase>integration-test</phase>
							<goals>
								<goal>integration-test</goal>
							</goals>
						</execution>
						<execution>
							<id>verify-results</id>
							<phase>verify</phase>
							<goals>
								<goal>verify</goal>
							</goals>
						</execution>
						<execution>
						<id>e2e-tests</id>
						<phase>integration-test</phase>
						<goals>
							<goal>integration-test</goal>
						</goals>
						<configuration>
							<excludes>
								<exclude>**/*IT.java</exclude>
							</excludes>
							<includes>
								<include>**/*E2ETest.java</include>
							</includes>
						</configuration>
					</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.pitest</groupId>
					<artifactId>pitest-maven</artifactId>
					<version>1.17.4</version>
					<configuration>

						<skipTests>${skipPitest}</skipTests>

						<excludedClasses>
							<param>com.unifi.ordersmgmt.model.*</param>
							<param>com.unifi.ordersmgmt.view.swing.*</param>
							<param>com.unifi.ordersmgmt.app.swing.*</param>
						</excludedClasses>

						<excludedTestClasses>
							<param>
								com.unifi.ordersmgmt.view.swing.OrderSwingViewTest</param>
							<param>**.*IT</param>
							<param>**.*E2ETest</param>
						</excludedTestClasses>
						<targetTests>
							<param>com.unifi.ordersmgmt.*</param>
						</targetTests>
						<!-- Timeout aumentato per test più pesanti -->

						<timeoutConstant>8000</timeoutConstant>
						<timeoutFactor>1.5</timeoutFactor>

						<!-- Logging dettagliato -->
						<verbose>true</verbose>
						<mutators>
							<mutator>DEFAULTS</mutator>
						</mutators>
					</configuration>
					<executions>
						<execution>
							<phase>verify</phase>
							<goals>
								<goal>mutationCoverage</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<profiles>
		<profile>
			<id>jacoco</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>integration-tests</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-failsafe-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>pitest</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.pitest</groupId>
						<artifactId>pitest-maven</artifactId>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>